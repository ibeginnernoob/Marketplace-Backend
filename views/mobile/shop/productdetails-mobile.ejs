<%- include('../includes/head-mobile.ejs') %>
</head>
<!--<input type="hidden" name="_csrf" value="<%= csrfToken %>"> for post requests to be added in future.-->
<body>
    <%- include('../includes/navbar-mobile.ejs') %>
    <div class="product-details-page">
        <div class="thumbnails">
            <img src="<%= product.imageURL[0] %>" alt="" class="thumbnail">
            <img src="<%= product.imageURL[1] %>" alt="" class="thumbnail">
            <img src="<%= product.imageURL[2] %>" alt="" class="thumbnail">
            <img src="<%= product.imageURL[3] %>" alt="" class="thumbnail">
            <img src="<%= product.imageURL[4] %>" alt="" class="thumbnail">
        </div>
        <img src="<%= product.imageURL[0] %>" alt="" id="zoomed" class="zoomed-image">
        <h1 class="title-details-page"><%= product.title %></h1> 
        <h2 class="type-details-page"><%= product.type %></h2>
        <div class="display-price-details-page">
            <div class="price-details-page">&#8377;<%= product.price %></div>   
            <div class="cancelled-price-details-page"><s>&#8377;<%= product.cancel_price %></s></div>
        </div>
        <p class="description-details-page"><%= product.description %></p>
        <div class="product-purchase-section">
            <form action="/details/add-to-cart" method="post">
                <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                <input type="hidden" value="<%= product._id %>" name="productId">
                <div class="qty-input-div-details-page">
                    Quantity: 
                    <button type="button" class="quantity-btn-details-page minus">-</button>
                    <input type="number" min="1" value="<%= Qty %>" id="qty-input" class="qty-input-details-page" name="qty" <% if (!isAuthenticated) { %> disabled <% } %>>
                    <button type="button" class="quantity-btn-details-page plus">+</button>
                </div>
                <div class="details-page-btns">
                    <button type="submit" class="add-cart-details-page" <% if (!isAuthenticated) { %> disabled data-message="Please Log In or Sign Up to add products to your Cart" <% } %>>Add To Cart</button>
                    <% if (!isAuthenticated) { %>
                        <div id="cart-message-box" class="message-box"></div>
                    <% } %>
            </form>
                <form action="/add-to-wishlist" method="post">
                    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
                    <input type="hidden" value="<%= product._id %>" name="productId">
                    <button type="submit" class="add-wishlist-details-page" <% if (!isAuthenticated) { %> disabled data-message="Please Log In or Sign Up to add products to your Wishlist" <% } %>>Add to Wishlist</button>
                    <% if (!isAuthenticated) { %>
                        <div id="wishlist-message-box" class="message-box"></div>
                    <% } %>
                </form>
            </div>
        </div>   
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const minusButton = document.querySelector('.minus');
            const plusButton = document.querySelector('.plus');
            const input = document.querySelector('input[type="number"]');

            const cartButton = document.querySelector('.add-cart-details-page[disabled]');
            const wishlistButton = document.querySelector('.add-wishlist-details-page[disabled]');
            const cartMessageBox = document.getElementById('cart-message-box');
            const wishlistMessageBox = document.getElementById('wishlist-message-box');
            let activeTimeoutId = null;

            function hideAllMessages(){
                cartMessageBox.style.display = 'none';
                wishlistMessageBox.style.display = 'none';
                if (activeTimeoutId) {
                    clearTimeout(activeTimeoutId);
                    activeTimeoutId = null;
                }
            }

            function showMessage(button, messageBox){
                const message = button.getAttribute('data-message');
                if (message) {
                    hideAllMessages(); // Hide any existing messages first
                    
                    // Small delay to ensure smooth transition if a message was just hidden
                    setTimeout(() => {
                        messageBox.textContent = message;
                        messageBox.style.display = 'block';
                        
                        activeTimeoutId = setTimeout(() => {
                            messageBox.style.display = 'none';
                            activeTimeoutId = null;
                        }, 3000); // Message will disappear after 3 seconds
                    }, 50);
                }
            }

            if (cartButton){
                cartButton.addEventListener('touchstart', function(e) {
                    e.preventDefault();
                    showMessage(this, cartMessageBox);
                });
            }

            if (wishlistButton){
                wishlistButton.addEventListener('touchstart', function(e) {
                    e.preventDefault();
                    showMessage(this, wishlistMessageBox);
                });
            }

            // Hide messages when tapping anywhere else on the screen
            document.addEventListener('touchstart', function(e) {
                if (!e.target.closest('.add-cart-details-page') && !e.target.closest('.add-wishlist-details-page')) {
                    hideAllMessages();
                }
            });

            const thumbnails = document.querySelectorAll('.thumbnail');
            const zoomedImage = document.getElementById('zoomed');
            thumbnails.forEach(thumbnail => {
                thumbnail.addEventListener('mouseover', () => {
                    zoomedImage.src = thumbnail.src;
                    zoomedImage.alt = thumbnail.alt;
                    thumbnails.forEach(thumb => thumb.classList.remove('active'));
                    thumbnail.classList.add('active');
                });
            });
            thumbnails[0].classList.add('active');

            function updateQuantity(change) {
                let value = parseInt(input.value, 10);
                value += change;
                value = Math.max(1, value);
                input.value = value;
            }

            minusButton.addEventListener('click', () => updateQuantity(-1));
            plusButton.addEventListener('click', () => updateQuantity(1));


            input.addEventListener('focus', function() {
            this.style.caretColor = 'transparent';
            });
            input.addEventListener('keydown', function(e) {
            if (e.key === 'ArrowUp') {
                e.preventDefault();
                this.value = parseInt(this.value) + 1;
            } else if (e.key === 'ArrowDown') {
                e.preventDefault();
                this.value = parseInt(this.value) - 1;
            } else if (e.key !== 'Tab') {
                e.preventDefault();
            }
            });
        });
        // const input = document.getElementById('qty-input');
    </script>
</body>